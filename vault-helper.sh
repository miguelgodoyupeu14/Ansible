#!/bin/bash
# Script helper para manejar Ansible Vault
# Ubicaci√≥n: ./vault-helper.sh

set -e

SECRETS_FILE="secrets.yml"
VAULT_PASSWORD_FILE=".vault_password"

show_help() {
    cat << EOF
üîê ANSIBLE VAULT HELPER
======================

COMANDOS DISPONIBLES:

üîí Cifrar el archivo de secrets:
   ./vault-helper.sh encrypt

üîì Ver las contrase√±as (sin descifrar):
   ./vault-helper.sh view

‚úèÔ∏è  Editar las contrase√±as:
   ./vault-helper.sh edit

üîÑ Cambiar la contrase√±a del vault:
   ./vault-helper.sh rekey

üéØ Ejecutar playbook con vault:
   ./vault-helper.sh run [playbook]

üìã Ver estado del vault:
   ./vault-helper.sh status

üÜî Crear archivo de password autom√°tico:
   ./vault-helper.sh create-password

EJEMPLOS:
---------
# Cifrar por primera vez:
./vault-helper.sh encrypt

# Editar contrase√±as:
./vault-helper.sh edit

# Ejecutar configuraci√≥n completa:
./vault-helper.sh run main.yml

# Ejecutar solo gaming:
./vault-helper.sh run main.yml --tags gaming

EOF
}

check_secrets_file() {
    if [ ! -f "$SECRETS_FILE" ]; then
        echo "‚ùå Error: No se encuentra el archivo $SECRETS_FILE"
        exit 1
    fi
}

is_encrypted() {
    grep -q "\$ANSIBLE_VAULT" "$SECRETS_FILE" 2>/dev/null
}

case "$1" in
    encrypt)
        check_secrets_file
        if is_encrypted; then
            echo "‚ö†Ô∏è  El archivo $SECRETS_FILE ya est√° cifrado"
        else
            echo "üîí Cifrando $SECRETS_FILE..."
            ansible-vault encrypt "$SECRETS_FILE"
            echo "‚úÖ Archivo cifrado exitosamente"
        fi
        ;;
    
    view)
        check_secrets_file
        if is_encrypted; then
            echo "üîì Mostrando contenido de $SECRETS_FILE:"
            ansible-vault view "$SECRETS_FILE"
        else
            echo "‚ö†Ô∏è  El archivo no est√° cifrado. Mostrando contenido:"
            cat "$SECRETS_FILE"
        fi
        ;;
    
    edit)
        check_secrets_file
        echo "‚úèÔ∏è  Editando $SECRETS_FILE..."
        if is_encrypted; then
            ansible-vault edit "$SECRETS_FILE"
        else
            echo "‚ö†Ô∏è  El archivo no est√° cifrado. ¬øDeseas cifrarlo primero? (y/n)"
            read -r response
            if [[ "$response" =~ ^[Yy]$ ]]; then
                ansible-vault encrypt "$SECRETS_FILE"
                ansible-vault edit "$SECRETS_FILE"
            else
                "${EDITOR:-vi}" "$SECRETS_FILE"
            fi
        fi
        ;;
    
    rekey)
        check_secrets_file
        if is_encrypted; then
            echo "üîÑ Cambiando contrase√±a del vault..."
            ansible-vault rekey "$SECRETS_FILE"
            echo "‚úÖ Contrase√±a cambiada exitosamente"
        else
            echo "‚ùå El archivo no est√° cifrado. Usa 'encrypt' primero."
        fi
        ;;
    
    run)
        if [ -z "$2" ]; then
            echo "‚ùå Especifica un playbook. Ejemplo: ./vault-helper.sh run main.yml"
            exit 1
        fi
        
        playbook="$2"
        shift 2
        args="$*"
        
        if [ ! -f "$playbook" ]; then
            echo "‚ùå No se encuentra el playbook: $playbook"
            exit 1
        fi
        
        echo "üéØ Ejecutando $playbook con vault..."
        
        if [ -f "$VAULT_PASSWORD_FILE" ]; then
            echo "üîë Usando archivo de password autom√°tico"
            ansible-playbook "$playbook" --vault-password-file "$VAULT_PASSWORD_FILE" $args
        else
            echo "üîë Solicitando password del vault"
            ansible-playbook "$playbook" --ask-vault-pass $args
        fi
        ;;
    
    status)
        check_secrets_file
        echo "üìã ESTADO DEL VAULT:"
        echo "==================="
        
        if is_encrypted; then
            echo "üîí Estado: CIFRADO ‚úÖ"
        else
            echo "üîì Estado: SIN CIFRAR ‚ö†Ô∏è"
        fi
        
        echo "üìÅ Archivo: $SECRETS_FILE"
        echo "üìè Tama√±o: $(du -h "$SECRETS_FILE" | cut -f1)"
        echo "üìÖ Modificado: $(stat -c %y "$SECRETS_FILE")"
        
        if [ -f "$VAULT_PASSWORD_FILE" ]; then
            echo "üîë Password autom√°tico: CONFIGURADO ‚úÖ"
        else
            echo "üîë Password autom√°tico: NO CONFIGURADO"
        fi
        ;;
    
    create-password)
        echo "üÜî Creando archivo de password autom√°tico..."
        echo "Introduce la contrase√±a del vault:"
        read -s vault_password
        echo "$vault_password" > "$VAULT_PASSWORD_FILE"
        chmod 600 "$VAULT_PASSWORD_FILE"
        echo "‚úÖ Archivo $VAULT_PASSWORD_FILE creado"
        echo "üîê Ahora puedes usar: ./vault-helper.sh run main.yml"
        ;;
    
    help|--help|-h|"")
        show_help
        ;;
    
    *)
        echo "‚ùå Comando desconocido: $1"
        echo "Usa './vault-helper.sh help' para ver los comandos disponibles"
        exit 1
        ;;
esac